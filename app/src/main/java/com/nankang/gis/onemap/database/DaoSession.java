package com.nankang.gis.onemap.database;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.supermap.demo.test.database.FavoriteDB;
import com.supermap.demo.test.database.HistoryDB;
import com.supermap.demo.test.database.UserDB;

import com.nankang.gis.onemap.database.FavoriteDBDao;
import com.nankang.gis.onemap.database.HistoryDBDao;
import com.nankang.gis.onemap.database.UserDBDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig favoriteDBDaoConfig;
    private final DaoConfig historyDBDaoConfig;
    private final DaoConfig userDBDaoConfig;

    private final FavoriteDBDao favoriteDBDao;
    private final HistoryDBDao historyDBDao;
    private final UserDBDao userDBDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        favoriteDBDaoConfig = daoConfigMap.get(FavoriteDBDao.class).clone();
        favoriteDBDaoConfig.initIdentityScope(type);

        historyDBDaoConfig = daoConfigMap.get(HistoryDBDao.class).clone();
        historyDBDaoConfig.initIdentityScope(type);

        userDBDaoConfig = daoConfigMap.get(UserDBDao.class).clone();
        userDBDaoConfig.initIdentityScope(type);

        favoriteDBDao = new FavoriteDBDao(favoriteDBDaoConfig, this);
        historyDBDao = new HistoryDBDao(historyDBDaoConfig, this);
        userDBDao = new UserDBDao(userDBDaoConfig, this);

        registerDao(FavoriteDB.class, favoriteDBDao);
        registerDao(HistoryDB.class, historyDBDao);
        registerDao(UserDB.class, userDBDao);
    }
    
    public void clear() {
        favoriteDBDaoConfig.clearIdentityScope();
        historyDBDaoConfig.clearIdentityScope();
        userDBDaoConfig.clearIdentityScope();
    }

    public FavoriteDBDao getFavoriteDBDao() {
        return favoriteDBDao;
    }

    public HistoryDBDao getHistoryDBDao() {
        return historyDBDao;
    }

    public UserDBDao getUserDBDao() {
        return userDBDao;
    }

}
