apply plugin: 'com.android.application'
apply plugin: 'WMRouter'
apply from  : 'tinker-support.gradle'
apply plugin: 'walle'
apply plugin: 'org.greenrobot.greendao'

//美团walle多渠道打包
walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = 'v${versionName}-${channel}-${buildType}.apk'
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}


android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        flavorDimensions rootProject.ext.android.flavorDimensions
        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }

        ndk {
            abiFilters "armeabi-v7a"
        }
    }

    signingConfigs {
        release {
            storeFile file("../one_map.jks")
            storePassword "nankang2019"
            keyAlias "nankang"
            keyPassword "nankang2019"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //渠道管理开发/测试/正式
    productFlavors {
        app_online {
            buildConfigField("String", "API_HOST", "\"http://api.anyinfo.com\"")//正式环境配置
        }
        app_test {
            buildConfigField("String", "API_HOST", "\"http://192.168.1.154:8005\"")
        }
        app_dev {
            buildConfigField("String", "API_HOST", "\"http://192.168.6.29:8101\"")
        }
        app_prepare {
            buildConfigField("String", "API_HOST", "\"http://api.bizbook.cn\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    greendao {
        schemaVersion rootProject.ext.greendao.greenDaoversionCode
        daoPackage 'com.nankang.gis.onemap.database'
        targetGenDir 'src/main/java'
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.constraint
    implementation rootProject.ext.dependencies.design
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0-beta01'
    testImplementation rootProject.ext.dependencies.junit
    androidTestImplementation rootProject.ext.dependencies.runner
    androidTestImplementation rootProject.ext.dependencies.espresso
    implementation rootProject.ext.dependencies["support"]
    api rootProject.ext.dependencies["fastjson"]
    /** **  网络框架 start           ****/
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["adapter-rxjava"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["okhttp"]
    implementation rootProject.ext.dependencies["okhttp-apache"]
    implementation rootProject.ext.dependencies["interceptor"]
    implementation rootProject.ext.dependencies["integration"]
    implementation rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide_compiler"]
    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butt_compiler"]
    implementation rootProject.ext.dependencies["wmrouter"]
    annotationProcessor rootProject.ext.dependencies["wmrouter_compiler"]
    implementation rootProject.ext.dependencies["SmartRefreshLayout"]
    //刷新
    implementation rootProject.ext.dependencies["SmartRefreshHeader"]
    implementation rootProject.ext.dependencies["picker_view"]
    //时间选择器
    implementation rootProject.ext.dependencies["multidex"]
    debugImplementation rootProject.ext.dependencies["spiderman"]
    //异常捕获
    releaseImplementation rootProject.ext.dependencies["spiderman_no_op"]
    //bugly
    implementation rootProject.ext.dependencies["bugly"]
    implementation rootProject.ext.dependencies["nativecrashreport"]
    implementation rootProject.ext.dependencies["tinker"]
    //walle多渠道打包
    implementation rootProject.ext.dependencies["walle"]
    //greenDao
    implementation rootProject.ext.dependencies["green_dao"]
    implementation files('libs/com.supermap.data_v911.jar')
    implementation files('libs/com.supermap.mapping_v911.jar')
    implementation files('libs/com.supermap.realspace_v911.jar')
    implementation files('libs/BaiduLBS_Android.jar')
    implementation files('libs/com.supermap.services_v911.jar')
}
